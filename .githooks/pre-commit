#!/bin/bash

# Pre-commit hook to run format checks, version validation, and tests
# This hook prevents commits if format is incorrect, versions are mismatched, or tests fail

set -e

# Check if plugin or server files are staged for commit
PLUGIN_MANIFEST_FILES_CHANGED=$(git diff --cached --name-only | grep -E '^plugin/(manifest\.json|manifest\.firefox\.json|package\.json)$' || true)
PLUGIN_SOURCE_FILES_CHANGED=$(git diff --cached --name-only | grep -E '^plugin/(src|tests)/.*\.(js|json)$' || true)
SERVER_FILES_CHANGED=$(git diff --cached --name-only | grep -E '^server/' || true)

# Validate plugin version consistency if manifest files changed
if [ -n "$PLUGIN_MANIFEST_FILES_CHANGED" ]; then
    echo "Validating plugin version consistency..."
    echo ""

    # Run version validation
    if ! (cd plugin && npm run version:validate --silent); then
        echo ""
        echo "✗ Plugin version validation failed!"
        echo ""
        echo "Version mismatch detected in plugin manifest files."
        echo ""
        echo "To fix this, run:"
        echo "  cd plugin && npm run version:sync"
        echo ""
        echo "Or manually update the versions in:"
        echo "  - plugin/manifest.json"
        echo "  - plugin/manifest.firefox.json"
        echo "  - plugin/package.json"
        echo ""
        echo "To skip this hook (not recommended):"
        echo "  git commit --no-verify"
        exit 1
    fi

    echo "✓ Plugin versions are consistent!"
    echo ""
fi

# Run plugin tests if source or test files changed
if [ -n "$PLUGIN_SOURCE_FILES_CHANGED" ]; then
    echo "Running plugin tests..."
    echo ""

    if ! (cd plugin && npm test); then
        echo ""
        echo "✗ Plugin tests failed!"
        echo ""
        echo "To run tests manually:"
        echo "  cd plugin && npm test"
        echo ""
        echo "To skip this hook (not recommended):"
        echo "  git commit --no-verify"
        exit 1
    fi

    echo ""
    echo "✓ Plugin tests passed!"
    echo ""
fi

# Check server formatting and tests if server files changed
if [ -n "$SERVER_FILES_CHANGED" ]; then
    echo "Checking server code formatting..."
    echo ""

    # Check cargo format for the server
    if ! cargo fmt --manifest-path server/Cargo.toml --check; then
        echo ""
        echo "✗ Code formatting check failed!"
        echo ""
        echo "To fix formatting, run:"
        echo "  cargo fmt --manifest-path server/Cargo.toml"
        echo ""
        echo "To skip this hook (not recommended):"
        echo "  git commit --no-verify"
        exit 1
    fi

    echo "✓ Code formatting is correct!"
    echo ""
    echo "Running server tests..."
    echo ""

    # Run cargo test for the server
    if ! cargo test --manifest-path server/Cargo.toml --quiet; then
        echo ""
        echo "✗ Tests failed! Please fix the failing tests before committing."
        echo ""
        echo "To run tests manually:"
        echo "  cargo test --manifest-path server/Cargo.toml"
        echo ""
        echo "To skip this hook (not recommended):"
        echo "  git commit --no-verify"
        exit 1
    fi

    echo ""
    echo "✓ Server tests passed!"
    echo ""
fi

echo "✓ All checks passed! Proceeding with commit."
